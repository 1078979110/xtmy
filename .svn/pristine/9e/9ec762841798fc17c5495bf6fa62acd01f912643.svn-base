<?php
namespace App\Admin\Controllers;

use App\Medicinal;
use App\Order;
use App\Salelist;
use App\Site;
use Encore\Admin\Controllers\AdminController;
use Maatwebsite\Excel\Facades\Excel;
use App\Hospital;
use App\Hospitalprice;
use PhpParser\Node\Expr\Exit_;
class PrintsController extends AdminController{

    protected $title = '商品随货同行单';
    protected $defaults = ['购货单位：','收货单位：','单据号：','日期：','合计（大写）：','发货员：','复核员：','储运条件：','签收：','发货地址：','联系电话：'];
    protected $defaultOne = ['购货单位：','编号：','部门：','业务员：','开票员：','日期：','合计：','发货员：','复核员：','客户签字'];
    protected $column = ['A','B','C','D','E','F','G','H','I','J','K','L','M','M','O','P','Q','R','S','T','U','V','W','X','Y','Z'];
    protected $template;
    public function startPrint(){
        $orderid = $_POST['id'];
        $this->template = (int)$_POST['template'];
        $orderAllInfo = Order::find($orderid)->toArray(true);
        
        if($orderAllInfo['buyertype'] == 1){//经销商
            $this->agentData($orderAllInfo);
        }else{//医院
           $this->hospitalData($orderAllInfo);
        }
    }
    /*
     * 经销商数据处理
     */
    protected function agentData($data){
        $orderCompany = Salelist::where('id',$data['buyerid'])->value('name');//收货单位
        $orderAddress = Salelist::where('id',$data['buyerid'])->value('address');//收货地址
        $orderSendCompany = Site::where('id',1)->value('sitename');//发货单位
        $orderSendAddress = Site::where('id',1)->value('siteaddress');//发货地址
        $orderPhone = Site::where('id',1)->value('telephone');//联系电话
        $orderId = $data['orderid'];//订单号
        $orderDate = Date('Y-m-d', time());//出货日期
        $orderData = json_decode($data['orderinfo'], true);
        $fullData = [];
        foreach ($orderData as $key=>$val){
            $t_t = [];//临时存储完整的药品信息
            $t_ = Medicinal::find($val['id']);
            $t_t = [$val['medicinal'],$t_['manufactur'],$t_['medicinalnum'],$t_['manufacturinglicense'],$t_['specification'],$t_['unit'],$val['num'],$t_['batchnumber'],$t_['registnum'],$t_['makedate'],$t_['invalidate'],$t_['storagecondition']];
            $fullData[] = $t_t;
        }
        $orderintro = array(//订单的基本信息
            'company' => $orderCompany,
            'address' => $orderAddress,
            'sendcompany' => $orderSendCompany,
            'sendaddress' => $orderSendAddress,
            'orderid' =>$orderId,
            'orderdate' =>$orderDate,
            'orderphone' => $orderPhone,
            'orderprice' => $data['totalprice']
        );
        switch ($this->template){
            case 1:
                $this->agentExcelOne($orderintro,$fullData);
                break;
            case 2:
                break;
            default:
                $this->agentExcelOne($orderintro,$fullData);
                
        }
        
    }
    
    /*医院订单以及数据处理
     * @param array $info 订单基本信息
     * 
     */
    protected function hospitalData($data){
        $orderCompany = Hospital::where('id',$data['hospital'])->value('hospital');//收货单位
        $orderAddress = Hospital::where('id',$data['hospital'])->value('address');//收货地址
        $orderSendCompany = Site::where('id',1)->value('sitename');//发货单位
        $orderSendAddress = Site::where('id',1)->value('siteaddress');//发货地址
        $orderPhone = Site::where('id',1)->value('telephone');//联系电话
        $orderId = $data['orderid'];//订单号
        $orderDate = Date('Y-m-d', time());//出货日期
        $orderData = json_decode($data['orderinfo'], true);
        $saler = Salelist::where('id',$data['buyerid'])->value('name');
        $orderInfo = [];
        $dataInfo = [];
        $orderInfo = array(
            'company' => $orderCompany,
            'address' => $orderAddress,
            'sendcompany' => $orderSendCompany,
            'sendaddress' => $orderSendAddress,
            'orderid' =>$orderId,
            'orderdate' =>$orderDate,
            'orderphone' => $orderPhone,
            'orderprice' => $data['totalprice'],
            'ordersaler' => $saler
        );
        foreach ($orderData as $key=>$val){
            $t_t = [];
            $t_ = Medicinal::find($val['id']);
            $perprice = Hospitalprice::where([['hospitalid',$data['hospital']],['medicinalid',$val['id']]])->value('price');
            $price = $val['num']*$perprice;
            $t_t = [$val['medicinal'],$t_['specification'],$t_['unit'],$val['num'],$perprice,$price,$t_['makedate'],$t_['batchnumber'],$t_['registnum'],$t_['invalidate']];
            $dataInfo[] = $t_t;
        }
        switch ($this->template){
            case 2:
                $this->hospitalExcelOne($orderInfo, $dataInfo);
                break;
            default:
                $this->hospitalExcelOne($orderInfo, $dataInfo);
                
        }
        
    }
    
    /**
     * 经销商    生成excel并且下载
     * @param array $orderintro订单基本信息
     *   company  string 收货公司
     *   address  string 收货地址
     *   sendcompany string 发货公司
     *   sendaddress string 发货地址
     *   orderid string 订单编号
     *   orderdate string 发货日期
     *   orderphone string 订单联系电话
     *   orderprice mixed 订单总价
     * 
     * @param array $data 需要导出的数据
     * 
     * @return mixed 返回excel文件
     */
    
    public function agentExcelOne($orderintro, $data){
        $title = $orderintro['company'].$orderintro['orderdate'];
        $datat = [];//表头部信息
        //$title = [];//列标题
        Excel::create($title, function($excel) use($data, $orderintro,$datat){
            $datat[] = [$orderintro['sendcompany'].$this->title];
            $datat[] = [$this->defaults[0].$orderintro['company'],$this->defaults[2].$orderintro['orderid']];
            $datat[] = [$this->defaults[1].$orderintro['address'],$this->defaults[3].$orderintro['orderdate']];
            $datat[][] = ['药品名称','生产厂商','药品编号','生产许可证','规格型号','单位','数量','批号','注册证书','生产日期','失效日期','储存条件'];
            array_splice($data,0,1,$datat[3]);
            $excel->sheet($orderintro['sendcompany'].$this->title, function($sheet) use($orderintro,$datat, $data){
                $sheet->setAutoSize(true);
                //$sheet->setColumnFormat(\PHPExcel_Cell_DataType::);
                $sheet->mergeCells("A1:L1");
                $sheet->mergeCells("A2:F2");
                $sheet->mergeCells('G2:L2');
                $sheet->mergeCells("A3:F3");
                $sheet->mergeCells('G3:L3');
                $sheet->setValueOfCell($datat[0][0],'A','1');
                $sheet->setValueOfCell($datat[1][0],'A','2');
                $sheet->setValueOfCell($datat[2][0],'A','3');
                $sheet->setValueOfCell($datat[1][1],'G','2');
                $sheet->setValueOfCell($datat[2][1],'G','3');
                $sheet->cells("A1", function ($cells) {
                    $cells->setAlignment('center');
                    $cells->setFontWeight('bold');
                    $cells->setFontSize(20);
                });
                $sheet->cells("A2", function ($cells) {
                    $cells->setAlignment('left');
                    $cells->setFontSize(12);
                });
                $sheet->cells("G2", function ($cells) {
                    $cells->setAlignment('left');
                    $cells->setFontSize(12);
                });
                $sheet->cells("A3", function ($cells) {
                    $cells->setAlignment('left');
                    $cells->setFontSize(12);
                });
                $sheet->cells("G3", function ($cells) {
                    $cells->setAlignment('left');
                    $cells->setFontSize(12);
                });
                $dataEndRow = sizeof($data)+3;
                $toCol = $sheet->getHighestColumn();
                for($i='A'; $i !== $toCol ;$i++){
                    $sheet->getColumnDimension($i)->setWidth('90');
                    $sheet->getStyle($i)->getAlignment()->setWrapText(TRUE);
                } 
                $sheet->fromArray($data, null, 'A4', false, false)->setFontSize(10)->setAutoSize(true);
                $dataEndRow++;
                //合计
                $sheet->mergeCells("A".$dataEndRow.":L".$dataEndRow);
                $sheet->cells("A".$dataEndRow, function($cells) use($orderintro){
                    $cells->setAlignment('left');
                    $cells->setFontSize(12);
                    $s = $this->get_amount($orderintro['orderprice']);
                    $cells->setValue($this->defaults[4].$s);
                });
                $array_style = array('borders'=>array('allborders'=>array('style'=>\PHPExcel_Style_Border::BORDER_THIN)));
                $sheet->getStyle('A4:L'.$dataEndRow)->applyFromArray($array_style);
                $dataEndRow++;
                //发货员
                $sheet->mergeCells("A".$dataEndRow.":C".$dataEndRow);
                $sheet->cells("A".$dataEndRow, function($cells){
                    $cells->setAlignment('left');
                    $cells->setFontSize(12);
                    $cells->setValue($this->defaults[5]);
                });
                //复核员
                $sheet->mergeCells("D".$dataEndRow.":F".$dataEndRow);
                $sheet->cells("D".$dataEndRow, function($cells){
                    $cells->setAlignment('left');
                    $cells->setFontSize(12);
                    $cells->setValue($this->defaults[6]);
                });
                //运输条件
                $sheet->mergeCells("G".$dataEndRow.":L".$dataEndRow);
                $sheet->cells("G".$dataEndRow, function($cells){
                    $cells->setAlignment('left');
                    $cells->setFontSize(12);
                    $cells->setValue($this->defaults[7]);
                });
                //签收
                $sheet->mergeCells("E".$dataEndRow.":F".$dataEndRow);
                $sheet->cells("E".$dataEndRow, function($cells){
                    $cells->setAlignment('left');
                    $cells->setFontSize(12);
                    $cells->setValue($this->defaults[8]);
                });
                $dataEndRow++;
                //发货地址
                $sheet->mergeCells("A".$dataEndRow.":F".$dataEndRow);
                $sheet->cells("A".$dataEndRow, function($cells) use($orderintro){
                    $cells->setAlignment('left');
                    $cells->setFontSize(12);
                    $cells->setValue($this->defaults[9].$orderintro['sendaddress']);
                });
                //联系电话
                $sheet->mergeCells("G".$dataEndRow.":L".$dataEndRow);
                $sheet->cells("G".$dataEndRow, function($cells)use($orderintro){
                    $cells->setAlignment('left');
                    $cells->setFontSize(12);
                    $cells->setValue($this->defaults[10].$orderintro['orderphone']);
                });
            });
        })->export('xls');
    }
    
    /*医院模板一
     * @param array $orderinfo 订单基本信息
     *   company  string 收货公司
     *   address  string 收货地址
     *   sendcompany string 发货公司
     *   sendaddress string 发货地址
     *   orderid string 订单编号
     *   orderdate string 发货日期
     *   orderphone string 订单联系电话
     *   orderprice mixed 订单总价
     *   ordersaler string 订单业务员
     * @param array $data 订单货物列表
     */
    protected function hospitalExcelOne($orderinfo, $data){
        $fileTtile = $orderinfo['company'].$orderinfo['orderdate'];
        $sheetHeader = [];
        $sheetHeader[] = $orderinfo['sendcompany'].$this->title;
        $sheetHeader[] = [$this->defaultOne[0].$orderinfo['company'],$this->defaultOne[1].$orderinfo['orderid']];
        $sheetHeader[] = [$this->defaultOne[2],$this->defaultOne[3].$orderinfo['ordersaler'],$this->defaultOne[4],$this->defaultOne[5].$orderinfo['orderdate']];
        $sheetHeader[][] = ['药品名称','规格型号','单位','数量','单价','金额','生产日期','批号','注册证书','有效日期'];
        array_splice($data,0,1,$sheetHeader[3]);
        Excel::create($fileTtile,function($excel) use($sheetHeader, $data, $orderinfo){
            $excel->sheet($sheetHeader[0][0], function($sheet) use($sheetHeader, $data, $orderinfo){
                //头部开始
                $sheet->mergeCells('A1:J1');
                $sheet->cells('A1', function($cells) use($sheetHeader){
                    $cells->setAlignment('center');
                    $cells->setFontSize(20);
                    $cells->setFontWeight('blod');
                    $cells->setValue($sheetHeader[0]);
                });
                //购货单位
                $sheet->mergeCells('A2:E2');
                $sheet->cells('A2', function($cells) use($sheetHeader){
                    $cells->setAlignment('left');
                    $cells->setFontSize(14);
                    $cells->setValue($sheetHeader[1][0]);
                });
                //编号
                $sheet->mergeCells('F2:J2');
                $sheet->cells('F2', function($cells) use($sheetHeader){
                    $cells->setAlignment('left');
                    $cells->setFontSize(14);
                    $cells->setValue($sheetHeader[1][1]);
                });
                //部门
                $sheet->mergeCells('A2:B2');
                $sheet->cells('A2', function($cells) use($sheetHeader){
                    $cells->setAlignment('left');
                    $cells->setFontSize(14);
                    $cells->setValue($sheetHeader[2][0]);
                });
                //业务员
                $sheet->mergeCells('C2:D2');
                $sheet->cells('C2', function($cells) use($sheetHeader){
                    $cells->setAlignment('left');
                    $cells->setFontSize(14);
                    $cells->setValue($sheetHeader[2][1]);
                });
                //开票员
                $sheet->mergeCells('E2:F2');
                $sheet->cells('E2', function($cells) use($sheetHeader){
                    $cells->setAlignment('left');
                    $cells->setFontSize(14);
                    $cells->setValue($sheetHeader[2][2]);
                });
                //日期
                $sheet->mergeCells('G2:H2');
                $sheet->cells('G2', function($cells) use($sheetHeader){
                    $cells->setAlignment('left');
                    $cells->setFontSize(14);
                    $cells->setValue($sheetHeader[2][2]);
                });
                $dataEndRow = sizeof($data)+3;
                
                $toCol = $sheet->getHighestColumn();
                for($i='A'; $i !== $toCol ;$i++){
                    $sheet->getColumnDimension($i)->setWidth('90');
                    $sheet->getStyle($i)->getAlignment()->setWrapText(TRUE);
                }
                $sheet->fromArray($data, null, 'A4', false, false)->setFontSize(10)->setAutoSize(true);
                $dataEndRow++;
                
                //合计
                $sheet->mergeCells('A'.$dataEndRow.':H'.$dataEndRow);
                $sheet->cells('A'.$dataEndRow, function($cells) use($sheetHeader){
                    $cells->setAlignment('left');
                    $cells->setFontSize(14);
                    $cells->setValue($this->defaultOne[6]);
                });
                $dataEndRow++;
                //发货员
                $sheet->mergeCells('A'.$dataEndRow.':C'.$dataEndRow);
                $sheet->cells('A'.$dataEndRow, function($cells){
                    $cells->setAlignment('left');
                    $cells->setFontSize(14);
                    $cells->setValue($this->defaultOne[7]);
                });
                
                //复核员
                $sheet->mergeCells('D'.$dataEndRow.':F'.$dataEndRow);
                $sheet->cells('D'.$dataEndRow, function($cells){
                    $cells->setAlignment('left');
                    $cells->setFontSize(14);
                    $cells->setValue($this->defaultOne[8]);
                });
                    
                //客户签收
                $sheet->mergeCells('G'.$dataEndRow.':J'.$dataEndRow);
                $sheet->cells('G'.$dataEndRow, function($cells){
                    $cells->setAlignment('left');
                    $cells->setFontSize(14);
                    $cells->setValue($this->defaultOne[9]);
                });
            });
        })->export('xls');
    }
   
    /*    
    * 数字金额转换成中文大写金额的函数
    * @param String|Int  $num  要转换的小写数字或小写字符串
    *return 大写字母
    *小数位为两位
    **/
    protected function get_amount($num){
        $c1 = "零壹贰叁肆伍陆柒捌玖";
        $c2 = "分角元拾佰仟万拾佰仟亿";
        $num = round($num, 2);
        $num = $num * 100;
        if (strlen($num) > 10) {
            return "数据太长，没有这么大的钱吧，检查下";
        } 
        $i = 0;
        $c = "";
        while (1) {
            if ($i == 0) {
                $n = substr($num, strlen($num)-1, 1);
            } else {
                $n = $num % 10;
            } 
            $p1 = substr($c1, 3 * $n, 3);
            $p2 = substr($c2, 3 * $i, 3);
            if ($n != '0' || ($n == '0' && ($p2 == '亿' || $p2 == '万' || $p2 == '元'))) {
                $c = $p1 . $p2 . $c;
            } else {
                $c = $p1 . $c;
            } 
            $i = $i + 1;
            $num = $num / 10;
            $num = (int)$num;
            if ($num == 0) {
                break;
            } 
        }
        $j = 0;
        $slen = strlen($c);
        while ($j < $slen) {
            $m = substr($c, $j, 6);
            if ($m == '零元' || $m == '零万' || $m == '零亿' || $m == '零零') {
                $left = substr($c, 0, $j);
                $right = substr($c, $j + 3);
                $c = $left . $right;
                $j = $j-3;
                $slen = $slen-3;
            } 
            $j = $j + 3;
        } 
 
        if (substr($c, strlen($c)-3, 3) == '零') {
            $c = substr($c, 0, strlen($c)-3);
        }
        if (empty($c)) {
            return "零元整";
        }else{
            return $c . "整";
        }
    }
}